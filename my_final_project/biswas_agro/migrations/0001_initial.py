# Generated by Django 4.2.11 on 2025-06-27 10:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('costcategory', models.CharField(max_length=20)),
                ('costitems', models.CharField(blank=True, max_length=20, null=True)),
                ('buyamount', models.FloatField()),
                ('unit', models.CharField(max_length=10)),
                ('cost', models.FloatField()),
                ('status', models.IntegerField(blank=True, db_comment='1 is paid, 2 is due', null=True)),
                ('buyer', models.CharField(max_length=20)),
                ('buyvoucher', models.CharField(max_length=20)),
                ('comment', models.CharField(max_length=50)),
                ('logs', models.CharField(max_length=50)),
                ('costitems_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Costitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.IntegerField()),
                ('costitems', models.CharField(max_length=20, unique=True)),
                ('logs', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'costitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Costpurpose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('costpurpose', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'costpurpose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dailyworks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_column='Date')),
                ('worktype', models.CharField(max_length=20)),
                ('item', models.CharField(max_length=20)),
                ('amount', models.DecimalField(decimal_places=0, max_digits=5)),
                ('unit', models.CharField(max_length=10)),
                ('personel', models.CharField(max_length=20)),
                ('comment', models.CharField(max_length=50)),
                ('logs', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'dailyworks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Earning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('sector', models.IntegerField()),
                ('item', models.IntegerField()),
                ('source', models.IntegerField()),
                ('quantity_per_unit', models.FloatField()),
                ('quantity', models.IntegerField()),
                ('unit', models.IntegerField()),
                ('price', models.IntegerField()),
                ('status', models.IntegerField(blank=True, db_comment='1 is paid, 2 is pending ', null=True)),
                ('memo', models.CharField(max_length=15)),
                ('comment', models.CharField(max_length=30)),
                ('logs', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'earning',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fishbuy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('fishname', models.CharField(max_length=20)),
                ('buyfrom', models.CharField(max_length=50)),
                ('buyamount', models.IntegerField()),
                ('fishquantity', models.IntegerField()),
                ('price', models.IntegerField()),
                ('status', models.IntegerField(blank=True, db_comment='1 is paid, 2 is due', null=True)),
                ('fishto', models.CharField(max_length=50)),
                ('vouchar', models.CharField(max_length=15)),
                ('comments', models.CharField(max_length=50)),
                ('logs', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'fishbuy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fishtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fishname', models.CharField(db_column='FishName', max_length=20, unique=True)),
                ('logs', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'fishtype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=20)),
                ('amount', models.FloatField()),
                ('comments', models.CharField(max_length=50)),
                ('logs', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'investment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(max_length=20)),
                ('item_name', models.CharField(max_length=15, unique=True)),
                ('logs', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Land',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gher', models.IntegerField()),
                ('mousa', models.CharField(max_length=15)),
                ('dag', models.CharField(max_length=20)),
                ('khotian', models.CharField(max_length=3)),
                ('amount', models.FloatField()),
                ('plane_land', models.FloatField()),
                ('par_cannel', models.FloatField()),
                ('owners', models.CharField(max_length=200)),
                ('comment', models.CharField(max_length=100)),
                ('logs', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'land',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loandetails',
            fields=[
                ('loanid', models.AutoField(primary_key=True, serialize=False)),
                ('investerid', models.IntegerField()),
                ('amount', models.IntegerField()),
                ('interestpermonth', models.DecimalField(decimal_places=2, max_digits=3)),
                ('conditions', models.CharField(max_length=50)),
                ('logs', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'loandetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoanProvidersInfo',
            fields=[
                ('investerid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('address', models.CharField(db_column='Address', max_length=50)),
                ('mobile', models.TextField(db_column='Mobile')),
                ('refference', models.CharField(db_column='Refference', max_length=20)),
                ('logs', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'loan_providers_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoanTransactions',
            fields=[
                ('loanid', models.IntegerField(primary_key=True, serialize=False)),
                ('investerid', models.IntegerField()),
                ('date', models.DateField()),
                ('payment', models.IntegerField(db_column='Payment')),
                ('voucherno', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'loan_transactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mousa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mousa', models.CharField(blank=True, max_length=255, null=True)),
                ('dag', models.CharField(blank=True, max_length=255, null=True)),
                ('owner', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('term', models.CharField(blank=True, max_length=255, null=True)),
                ('vc_numnber', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, db_comment='1 is paid, 2 is pending ', null=True)),
                ('log', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'mousa',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('purpose', models.CharField(max_length=20)),
                ('reason', models.CharField(max_length=20)),
                ('quantity', models.IntegerField()),
                ('rate', models.IntegerField()),
                ('total', models.IntegerField()),
                ('personel', models.CharField(max_length=50)),
                ('voucher', models.CharField(max_length=5)),
                ('status', models.IntegerField(blank=True, db_comment='1 is paid, 2 is due', null=True)),
                ('comment', models.CharField(max_length=20)),
                ('logs', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'salary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sectors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(max_length=15, unique=True)),
                ('logs', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'sectors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=20)),
                ('logs', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'sources',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('staffno', models.AutoField(db_column='staffNo', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('post', models.CharField(max_length=10)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('address', models.CharField(max_length=30)),
                ('mobile', models.CharField(max_length=11)),
                ('reference', models.CharField(max_length=15)),
                ('log', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'staff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Staffs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=20)),
                ('designation', models.CharField(db_column='Designation', max_length=20)),
                ('address', models.CharField(db_column='Address', max_length=30)),
                ('mobile', models.CharField(max_length=13)),
            ],
            options={
                'db_table': 'staffs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Units',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=10)),
                ('logs', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'units',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('trn_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usersinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('password', models.CharField(max_length=260)),
                ('role', models.CharField(max_length=15)),
                ('email', models.CharField(max_length=20)),
                ('mobile', models.TextField()),
            ],
            options={
                'db_table': 'usersinfo',
                'managed': False,
            },
        ),
    ]
